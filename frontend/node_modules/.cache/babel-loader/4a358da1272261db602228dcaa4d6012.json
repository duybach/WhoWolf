{"ast":null,"code":"var _jsxFileName = \"/home/duybach/Desktop/whowolf-gui/src/components/GameEnd.js\";\nimport React, { useCallback, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport Container from 'react-bootstrap/Container';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport Row from 'react-bootstrap/Row';\nimport Chat from './Chat';\nimport { setLobby } from '../actions';\n\nconst Game = ({\n  socket,\n  lobby,\n  dispatch\n}) => {\n  const history = useHistory();\n  const fetchLobby = useCallback(() => {\n    socket.emit('lobbyStatus', lobby.id, message => {\n      if ('error' in message) {\n        console.log(message.error);\n      } else {\n        dispatch(setLobby(message));\n      }\n    });\n    socket.on('lobbyStatus', message => {\n      dispatch(setLobby(message));\n    });\n  }, [socket, dispatch, lobby.id]);\n\n  const restartGame = () => {\n    socket.emit('lobby', lobby.id, 'START_GAME');\n  };\n\n  useEffect(() => {\n    if (lobby.status === 'GAME') {\n      history.push(`/game/${lobby.id}`);\n    } else if (lobby.status === 'LOBBY') {\n      history.push(`/lobby/${lobby.id}`);\n    } else if (lobby.status === 'EXIT') {\n      dispatch(setLobby({}));\n      history.push(``);\n    }\n\n    fetchLobby();\n  }, [fetchLobby, history, lobby.id, lobby.status, dispatch]);\n  return /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }\n  }, \"Game \", lobby.id), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 11\n    }\n  }, \"Host: \", lobby.hostId), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 11\n    }\n  }, \"Team won: \", lobby.game.teamWon), /*#__PURE__*/React.createElement(ListGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }\n  }, Object.keys(lobby.players).map((playerId, index) => /*#__PURE__*/React.createElement(ListGroup.Item, {\n    key: index,\n    active: lobby.players[socket.id].targetPlayerId === playerId ? true : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }\n  }, lobby.players[playerId].alias, \" (\", lobby.players[playerId].role, \" | \", lobby.players[playerId].status, \")\"))))), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }, socket.id === lobby.hostId ? /*#__PURE__*/React.createElement(Button, {\n    variant: lobby.status === 'GAME_END' ? 'primary' : 'danger',\n    onClick: () => restartGame(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 39\n    }\n  }, \"Restart\") : ''), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Chat, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  })));\n};\n\nconst mapStateToProps = state => ({\n  socket: state.socket,\n  lobby: state.lobby\n});\n\nexport default connect(mapStateToProps)(Game);","map":{"version":3,"sources":["/home/duybach/Desktop/whowolf-gui/src/components/GameEnd.js"],"names":["React","useCallback","useEffect","useHistory","connect","Button","Col","Container","ListGroup","Row","Chat","setLobby","Game","socket","lobby","dispatch","history","fetchLobby","emit","id","message","console","log","error","on","restartGame","status","push","hostId","game","teamWon","Object","keys","players","map","playerId","index","targetPlayerId","alias","role","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { useCallback, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport Container from 'react-bootstrap/Container';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport Row from 'react-bootstrap/Row';\n\nimport Chat from './Chat';\n\nimport { setLobby } from '../actions';\n\nconst Game = ({ socket, lobby, dispatch }) => {\n  const history = useHistory();\n\n  const fetchLobby = useCallback(() => {\n    socket.emit('lobbyStatus', lobby.id, (message) => {\n      if ('error' in message) {\n        console.log(message.error);\n      } else {\n        dispatch(setLobby(message));\n      }\n    });\n\n    socket.on('lobbyStatus', (message) => {\n      dispatch(setLobby(message));\n    });\n  }, [socket, dispatch, lobby.id]);\n\n\n  const restartGame = () => {\n    socket.emit('lobby', lobby.id, 'START_GAME');\n  }\n\n  useEffect(() => {\n    if (lobby.status === 'GAME') {\n      history.push(`/game/${lobby.id}`);\n    } else if (lobby.status === 'LOBBY') {\n      history.push(`/lobby/${lobby.id}`);\n    } else if (lobby.status === 'EXIT') {\n      dispatch(setLobby({}));\n      history.push(``);\n    }\n\n    fetchLobby();\n\n  }, [fetchLobby, history, lobby.id, lobby.status, dispatch]);\n\n  return (\n    <Container>\n      <Row>\n        <Col>\n          <h1>Game {lobby.id}</h1>\n          <h3>Host: {lobby.hostId}</h3>\n          <h3>Team won: {lobby.game.teamWon}</h3>\n\n          <ListGroup>\n            {\n              Object.keys(lobby.players).map((playerId, index) => (\n                <ListGroup.Item key={index} active={lobby.players[socket.id].targetPlayerId === playerId ? true : false}>\n                  {lobby.players[playerId].alias} ({lobby.players[playerId].role} | {lobby.players[playerId].status})\n                </ListGroup.Item>\n              ))\n            }\n          </ListGroup>\n        </Col>\n      </Row>\n\n      <Row>\n        {socket.id === lobby.hostId ? <Button variant={lobby.status === 'GAME_END' ? 'primary' : 'danger'} onClick={() => restartGame()}>Restart</Button> : ''}\n      </Row>\n\n      <Row>\n        <Chat />\n      </Row>\n    </Container>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  socket: state.socket,\n  lobby: state.lobby\n});\n\nexport default connect(mapStateToProps)(Game);\n"]},"metadata":{},"sourceType":"module"}