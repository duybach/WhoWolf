{"ast":null,"code":"var _jsxFileName = \"/home/duybach/Desktop/whowolf-gui/src/components/Game.js\";\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport Container from 'react-bootstrap/Container';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport Row from 'react-bootstrap/Row';\nimport Chat from './Chat';\nimport { setLobby } from '../actions';\n\nconst Game = ({\n  socket,\n  lobby,\n  dispatch\n}) => {\n  const fetchLobby = useCallback(() => {\n    socket.emit('lobbyStatus', lobby.id, message => {\n      if ('error' in message) {\n        console.log(message.error);\n      } else {\n        dispatch(setLobby(message));\n      }\n    });\n    socket.on('lobbyStatus', message => {\n      dispatch(setLobby(message));\n    });\n  }, [socket, dispatch, lobby.id]);\n  useEffect(() => {\n    fetchLobby();\n  }, [fetchLobby]);\n  return /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 11\n    }\n  }, \"Lobby \", lobby.id), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 11\n    }\n  }, \" Host: \", lobby.hostId), /*#__PURE__*/React.createElement(ListGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 11\n    }\n  }, Object.keys(lobby.players).map((id, index) => /*#__PURE__*/React.createElement(ListGroup.Item, {\n    key: index,\n    variant: lobby.players[id].status === 'READY' ? 'success' : '',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }\n  }, lobby.players[id].alias, \" \", socket.id === lobby.hostId ? /*#__PURE__*/React.createElement(Button, {\n    variant: \"danger\",\n    onClick: () => kickPlayer(id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 75\n    }\n  }, \"X\") : ''))))), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: playerReady ? 'danger' : 'primary',\n    onClick: () => setPlayerStatus(!playerReady),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, playerReady ? 'Not ready' : 'Ready')), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Chat, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  })));\n};\n\nconst mapStateToProps = state => ({\n  socket: state.socket,\n  lobby: state.lobby\n});\n\nexport default connect(mapStateToProps)(Game);","map":{"version":3,"sources":["/home/duybach/Desktop/whowolf-gui/src/components/Game.js"],"names":["React","useCallback","useEffect","useState","useHistory","connect","Button","Col","Container","ListGroup","Row","Chat","setLobby","Game","socket","lobby","dispatch","fetchLobby","emit","id","message","console","log","error","on","hostId","Object","keys","players","map","index","status","alias","kickPlayer","playerReady","setPlayerStatus","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { useCallback, useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport Container from 'react-bootstrap/Container';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport Row from 'react-bootstrap/Row';\n\nimport Chat from './Chat';\n\nimport { setLobby } from '../actions';\n\nconst Game = ({ socket, lobby, dispatch }) => {\n  const fetchLobby = useCallback(() => {\n    socket.emit('lobbyStatus', lobby.id, (message) => {\n      if ('error' in message) {\n        console.log(message.error);\n      } else {\n        dispatch(setLobby(message));\n      }\n    });\n\n    socket.on('lobbyStatus', (message) => {\n      dispatch(setLobby(message));\n    });\n  }, [socket, dispatch, lobby.id]);\n\n  useEffect(() => {\n    fetchLobby();\n  }, [fetchLobby]);\n\n  return (\n    <Container>\n      <Row>\n        <Col>\n          <h1>Lobby {lobby.id}</h1>\n          <h3> Host: {lobby.hostId}</h3>\n\n          <ListGroup>\n            {\n              Object.keys(lobby.players).map((id, index) => (\n                <ListGroup.Item key={index} variant={lobby.players[id].status === 'READY' ? 'success' : ''}>\n                  {lobby.players[id].alias} {socket.id === lobby.hostId ? <Button variant=\"danger\" onClick={() => kickPlayer(id)}>X</Button> : ''}\n                </ListGroup.Item>\n              ))\n            }\n          </ListGroup>\n        </Col>\n      </Row>\n\n      <Row>\n        <Button variant={playerReady ? 'danger' : 'primary'} onClick={() => setPlayerStatus(!(playerReady))}>{playerReady ? 'Not ready' : 'Ready'}</Button>\n      </Row>\n\n      <Row>\n        <Chat />\n      </Row>\n    </Container>\n  );\n}\n\nconst mapStateToProps = (state) => ({\n  socket: state.socket,\n  lobby: state.lobby\n})\n\nexport default connect(mapStateToProps)(Game);\n"]},"metadata":{},"sourceType":"module"}