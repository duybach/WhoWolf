{"ast":null,"code":"var _jsxFileName = \"/home/duybach/Desktop/whowolf-gui/src/components/Lobby.js\";\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport Container from 'react-bootstrap/Container';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport Row from 'react-bootstrap/Row';\nimport Chat from './Chat';\nimport { setLobby } from '../actions';\n\nconst Lobby = ({\n  socket,\n  lobby,\n  dispatch\n}) => {\n  const history = useHistory();\n  const [playerReady, setPlayerReady] = useState(false);\n\n  const setPlayerStatus = status => {\n    setPlayerReady(status);\n    socket.emit('lobby', lobby.id, 'PLAYER_READY', {\n      status: status\n    });\n  };\n\n  const kickPlayer = playerId => {\n    socket.emit('lobby', lobby.id, 'KICK_PLAYER', {\n      playerId: playerId\n    });\n  };\n\n  const startGame = () => {\n    socket.emit('lobby', lobby.id, 'START_GAME');\n  };\n\n  const fetchLobby = useCallback(() => {\n    socket.emit('lobbyStatus', lobby.id, message => {\n      if ('error' in message) {\n        console.log(message.error);\n      } else {\n        dispatch(setLobby(message));\n        history.push(`/game/${message.lobbyId}`);\n      }\n    });\n    socket.on('lobbyStatus', message => {\n      dispatch(setLobby(message));\n\n      if (lobby.status === 'GAME') {\n        console.log('GAME STARTED XDDD');\n      }\n    });\n  }, [socket, dispatch, lobby.id, lobby.status]);\n  useEffect(() => {\n    fetchLobby();\n  }, [fetchLobby]);\n  return /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }\n  }, \"Lobby \", lobby.id), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }\n  }, \" Host: \", lobby.hostId), /*#__PURE__*/React.createElement(ListGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }\n  }, Object.keys(lobby.players).map((id, index) => /*#__PURE__*/React.createElement(ListGroup.Item, {\n    key: index,\n    variant: lobby.players[id].status === 'READY' ? 'success' : '',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }\n  }, lobby.players[id].alias, \" \", socket.id === lobby.hostId ? /*#__PURE__*/React.createElement(Button, {\n    variant: \"danger\",\n    onClick: () => kickPlayer(id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 75\n    }\n  }, \"X\") : ''))))), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: playerReady ? 'danger' : 'primary',\n    onClick: () => setPlayerStatus(!playerReady),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }, playerReady ? 'Not ready' : 'Ready'), socket.id === lobby.hostId ? /*#__PURE__*/React.createElement(Button, {\n    variant: lobby.status === 'LOBBY_READY' ? 'primary' : 'danger',\n    onClick: () => startGame(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 39\n    }\n  }, \"Start\") : ''), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Chat, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  })));\n};\n\nconst mapStateToProps = state => ({\n  socket: state.socket,\n  lobby: state.lobby\n});\n\nexport default connect(mapStateToProps)(Lobby);","map":{"version":3,"sources":["/home/duybach/Desktop/whowolf-gui/src/components/Lobby.js"],"names":["React","useCallback","useEffect","useState","useHistory","connect","Button","Col","Container","ListGroup","Row","Chat","setLobby","Lobby","socket","lobby","dispatch","history","playerReady","setPlayerReady","setPlayerStatus","status","emit","id","kickPlayer","playerId","startGame","fetchLobby","message","console","log","error","push","lobbyId","on","hostId","Object","keys","players","map","index","alias","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { useCallback, useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport Container from 'react-bootstrap/Container';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport Row from 'react-bootstrap/Row';\n\nimport Chat from './Chat';\n\nimport { setLobby } from '../actions';\n\nconst Lobby = ({ socket, lobby, dispatch }) => {\n  const history = useHistory();\n  const [playerReady, setPlayerReady] = useState(false);\n\n  const setPlayerStatus = (status) => {\n    setPlayerReady(status);\n    socket.emit('lobby', lobby.id, 'PLAYER_READY', { status: status });\n  };\n\n  const kickPlayer = (playerId) => {\n    socket.emit('lobby', lobby.id, 'KICK_PLAYER', { playerId: playerId });\n  };\n\n  const startGame = () => {\n    socket.emit('lobby', lobby.id, 'START_GAME');\n  }\n\n  const fetchLobby = useCallback(() => {\n    socket.emit('lobbyStatus', lobby.id, (message) => {\n      if ('error' in message) {\n        console.log(message.error);\n      } else {\n        dispatch(setLobby(message));\n        history.push(`/game/${message.lobbyId}`);\n      }\n    });\n\n    socket.on('lobbyStatus', (message) => {\n      dispatch(setLobby(message));\n\n      if (lobby.status === 'GAME') {\n        console.log('GAME STARTED XDDD');\n      }\n    });\n  }, [socket, dispatch, lobby.id, lobby.status]);\n\n  useEffect(() => {\n    fetchLobby();\n  }, [fetchLobby]);\n\n  return (\n    <Container>\n      <Row>\n        <Col>\n          <h1>Lobby {lobby.id}</h1>\n          <h3> Host: {lobby.hostId}</h3>\n\n          <ListGroup>\n            {\n              Object.keys(lobby.players).map((id, index) => (\n                <ListGroup.Item key={index} variant={lobby.players[id].status === 'READY' ? 'success' : ''}>\n                  {lobby.players[id].alias} {socket.id === lobby.hostId ? <Button variant=\"danger\" onClick={() => kickPlayer(id)}>X</Button> : ''}\n                </ListGroup.Item>\n              ))\n            }\n          </ListGroup>\n        </Col>\n      </Row>\n\n      <Row>\n        <Button variant={playerReady ? 'danger' : 'primary'} onClick={() => setPlayerStatus(!(playerReady))}>{playerReady ? 'Not ready' : 'Ready'}</Button>\n        {socket.id === lobby.hostId ? <Button variant={lobby.status === 'LOBBY_READY' ? 'primary' : 'danger'} onClick={() => startGame()}>Start</Button> : ''}\n      </Row>\n\n      <Row>\n        <Chat />\n      </Row>\n    </Container>\n  );\n}\n\nconst mapStateToProps = (state) => ({\n  socket: state.socket,\n  lobby: state.lobby\n})\n\nexport default connect(mapStateToProps)(Lobby);\n"]},"metadata":{},"sourceType":"module"}