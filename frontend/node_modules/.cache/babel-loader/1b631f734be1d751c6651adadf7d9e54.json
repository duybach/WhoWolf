{"ast":null,"code":"var _jsxFileName = \"/home/duybach/Desktop/whowolf-gui/src/components/Lobby.js\";\nimport React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport Col from 'react-bootstrap/Col';\nimport Container from 'react-bootstrap/Container';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport Row from 'react-bootstrap/Row';\nimport { setLobby } from '../actions';\n\nconst Lobby = ({\n  socket,\n  lobby,\n  dispatch\n}) => {\n  useEffect(() => {\n    socket.emit('lobbyStatus', {\n      lobbyId: lobby.id\n    }, function (data) {\n      if ('error' in data) {\n        console.log(data.error);\n      } else {\n        dispatch(setLobby(data));\n      }\n    });\n  }, [dispatch, lobby.id, socket]);\n  return /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 11\n    }\n  }, \"Lobby \", lobby.id), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 11\n    }\n  }, \" Host: \", lobby.hostId))));\n};\n\nconst mapStateToProps = state => ({\n  socket: state.socket,\n  lobby: state.lobby\n});\n\nexport default connect(mapStateToProps)(Lobby);","map":{"version":3,"sources":["/home/duybach/Desktop/whowolf-gui/src/components/Lobby.js"],"names":["React","useEffect","connect","Col","Container","ListGroup","Row","setLobby","Lobby","socket","lobby","dispatch","emit","lobbyId","id","data","console","log","error","hostId","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AAEA,SAASC,QAAT,QAAyB,YAAzB;;AAEA,MAAMC,KAAK,GAAG,CAAC;AAAEC,EAAAA,MAAF;AAAUC,EAAAA,KAAV;AAAiBC,EAAAA;AAAjB,CAAD,KAAiC;AAC7CV,EAAAA,SAAS,CAAC,MAAM;AACdQ,IAAAA,MAAM,CAACG,IAAP,CAAY,aAAZ,EAA2B;AAAEC,MAAAA,OAAO,EAAEH,KAAK,CAACI;AAAjB,KAA3B,EAAkD,UAAUC,IAAV,EAAgB;AAChE,UAAI,WAAWA,IAAf,EAAqB;AACnBC,QAAAA,OAAO,CAACC,GAAR,CAAYF,IAAI,CAACG,KAAjB;AACD,OAFD,MAEO;AACLP,QAAAA,QAAQ,CAACJ,QAAQ,CAACQ,IAAD,CAAT,CAAR;AACD;AACF,KAND;AAOD,GARQ,EAQN,CAACJ,QAAD,EAAWD,KAAK,CAACI,EAAjB,EAAqBL,MAArB,CARM,CAAT;AAUA,sBACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAWC,KAAK,CAACI,EAAjB,CADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAYJ,KAAK,CAACS,MAAlB,CAFF,CADF,CADF,CADF;AAkBD,CA7BD;;AA+BA,MAAMC,eAAe,GAAIC,KAAD,KAAY;AAClCZ,EAAAA,MAAM,EAAEY,KAAK,CAACZ,MADoB;AAElCC,EAAAA,KAAK,EAAEW,KAAK,CAACX;AAFqB,CAAZ,CAAxB;;AAKA,eAAeR,OAAO,CAACkB,eAAD,CAAP,CAAyBZ,KAAzB,CAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\n\nimport Col from 'react-bootstrap/Col';\nimport Container from 'react-bootstrap/Container';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport Row from 'react-bootstrap/Row';\n\nimport { setLobby } from '../actions';\n\nconst Lobby = ({ socket, lobby, dispatch }) => {\n  useEffect(() => {\n    socket.emit('lobbyStatus', { lobbyId: lobby.id }, function (data) {\n      if ('error' in data) {\n        console.log(data.error);\n      } else {\n        dispatch(setLobby(data));\n      }\n    });\n  }, [dispatch, lobby.id, socket]);\n\n  return (\n    <Container>\n      <Row>\n        <Col>\n          <h1>Lobby {lobby.id}</h1>\n          <h3> Host: {lobby.hostId}</h3>\n\n{/*\n          <ListGroup>\n          {lobby.playerIds.map((item, index) => (\n            <ListGroup.Item>{item}</ListGroup.Item>\n          ))}\n          </ListGroup>\n*/}\n        </Col>\n      </Row>\n    </Container>\n  );\n}\n\nconst mapStateToProps = (state) => ({\n  socket: state.socket,\n  lobby: state.lobby\n})\n\nexport default connect(mapStateToProps)(Lobby);\n"]},"metadata":{},"sourceType":"module"}