{"ast":null,"code":"var _jsxFileName = \"/home/duybach/Desktop/whowolf-gui/src/components/GameEnd.js\";\nimport React, { useCallback, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport Container from 'react-bootstrap/Container';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport Row from 'react-bootstrap/Row';\nimport Chat from './Chat';\nimport { setLobby } from '../actions';\n\nconst Game = ({\n  socket,\n  lobby,\n  dispatch\n}) => {\n  const history = useHistory();\n  const fetchLobby = useCallback(() => {\n    socket.emit('lobbyStatus', lobby.id, message => {\n      if ('error' in message) {\n        console.log(message.error);\n      } else {\n        dispatch(setLobby(message));\n      }\n    });\n    socket.on('lobbyStatus', message => {\n      dispatch(setLobby(message));\n    });\n  }, [socket, dispatch, lobby.id]);\n  useEffect(() => {\n    if (lobby.status === 'LOBBY') {\n      history.push(`/LOBBY/${lobby.id}`);\n    } else if (lobby.status === 'EXIT') {\n      dispatch(setLobby({}));\n      history.push(`/LOBBY/${lobby.id}`);\n    }\n\n    fetchLobby();\n  }, [fetchLobby, history, lobby.id, lobby.status]);\n  return /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }\n  }, \"Game \", lobby.id), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }\n  }, \"Host: \", lobby.hostId), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  }, \"Team won: \", lobby.game.teamWon), /*#__PURE__*/React.createElement(ListGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  }, Object.keys(lobby.players).map((playerId, index) => /*#__PURE__*/React.createElement(ListGroup.Item, {\n    key: index,\n    active: lobby.players[socket.id].targetPlayerId === playerId ? true : false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }\n  }, lobby.players[playerId].alias, \" (\", lobby.players[playerId].role, \" | \", lobby.players[playerId].status, \")\", renderActionButtons(playerId)))))), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Chat, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  })));\n};\n\nconst mapStateToProps = state => ({\n  socket: state.socket,\n  lobby: state.lobby\n});\n\nexport default connect(mapStateToProps)(Game);","map":{"version":3,"sources":["/home/duybach/Desktop/whowolf-gui/src/components/GameEnd.js"],"names":["React","useCallback","useEffect","useHistory","connect","Button","Col","Container","ListGroup","Row","Chat","setLobby","Game","socket","lobby","dispatch","history","fetchLobby","emit","id","message","console","log","error","on","status","push","hostId","game","teamWon","Object","keys","players","map","playerId","index","targetPlayerId","alias","role","renderActionButtons","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { useCallback, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport Container from 'react-bootstrap/Container';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport Row from 'react-bootstrap/Row';\n\nimport Chat from './Chat';\n\nimport { setLobby } from '../actions';\n\nconst Game = ({ socket, lobby, dispatch }) => {\n  const history = useHistory();\n\n  const fetchLobby = useCallback(() => {\n    socket.emit('lobbyStatus', lobby.id, (message) => {\n      if ('error' in message) {\n        console.log(message.error);\n      } else {\n        dispatch(setLobby(message));\n      }\n    });\n\n    socket.on('lobbyStatus', (message) => {\n      dispatch(setLobby(message));\n    });\n  }, [socket, dispatch, lobby.id]);\n\n  useEffect(() => {\n    if (lobby.status === 'LOBBY') {\n      history.push(`/LOBBY/${lobby.id}`);\n    } else if (lobby.status === 'EXIT') {\n      dispatch(setLobby({}));\n      history.push(`/LOBBY/${lobby.id}`);\n    }\n\n    fetchLobby();\n\n  }, [fetchLobby, history, lobby.id, lobby.status]);\n\n  return (\n    <Container>\n      <Row>\n        <Col>\n          <h1>Game {lobby.id}</h1>\n          <h3>Host: {lobby.hostId}</h3>\n          <h3>Team won: {lobby.game.teamWon}</h3>\n\n          <ListGroup>\n            {\n              Object.keys(lobby.players).map((playerId, index) => (\n                <ListGroup.Item key={index} active={lobby.players[socket.id].targetPlayerId === playerId ? true : false}>\n                  {lobby.players[playerId].alias} ({lobby.players[playerId].role} | {lobby.players[playerId].status})\n                  {renderActionButtons(playerId)}\n                </ListGroup.Item>\n              ))\n            }\n          </ListGroup>\n        </Col>\n      </Row>\n\n      <Row>\n        <Chat />\n      </Row>\n    </Container>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  socket: state.socket,\n  lobby: state.lobby\n});\n\nexport default connect(mapStateToProps)(Game);\n"]},"metadata":{},"sourceType":"module"}